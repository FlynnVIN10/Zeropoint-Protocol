name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  MOCKS_DISABLED: '1'

jobs:
  compliance-checks:
    name: Compliance & Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: No Timeframes Check
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          PATTERN='(\bETA\b|\bdeadline\b|\bdue\b|\broadmap\b|\bby\b(?![:/0-9])|\btoday\b|\btomorrow\b|\byesterday\b|[0-9]+\s?(sec|secs|second|seconds|min|mins|minute|minutes|hour|hours|day|days|week|weeks|month|months|year|years))'
          git ls-files | grep -Ev '(^vendor/|\.png$|\.jpg$|\.gif$|\.woff2$|\.ico$|\.lock$)' \
          | xargs -I{} grep -EIn "${PATTERN}" {} && { echo "Timeframes found"; exit 1; } || exit 0

      - name: Forbid Typo Check
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          rg -n --hidden -S -i '\bsynthiant(s)?\b' \
            -g'!node_modules' -g'!.next' -g'!dist' -g'!build' -g'!CHANGELOG*' -g'!docs/release-notes/*' \
            && { echo '❌ forbidden term found'; exit 1; } || echo '✅ clean'

      - name: No Mocks Check
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          PATTERNS='(mock|stub|placeholder|TODO|FIXME|HACK)'
          git ls-files | grep -E '\.(ts|tsx|js|jsx)$' | grep -v 'node_modules' | grep -v '\.next' \
          | xargs -I{} grep -EIn "${PATTERNS}" {} && { echo "Mock/placeholder patterns found"; exit 1; } || exit 0

      - name: Check static files
        run: |
          test -f public/index.html
          test -f public/api/healthz.json
          test -f public/api/readyz.json

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: compliance-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: echo "Skipping tests for website deployment - focus on build and deploy"

  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: [compliance-checks, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install
