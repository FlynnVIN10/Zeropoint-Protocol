name: Dual Consensus Gate
on:
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  check_consensus:
    name: Verify Dual Consensus approvals
    runs-on: ubuntu-latest
    steps:
      - name: Extract proposalId from PR body
        id: extract
        run: |
          BODY="${{ github.event.pull_request.body }}"
          PROP_LINE=$(printf "%s" "$BODY" | grep -iE '^ *proposalId: *[A-Za-z0-9._:-]+' || true)
          if [ -z "$PROP_LINE" ]; then
            echo "ERROR: PR body must contain a line like: proposalId: <ID>"
            exit 1
          fi
          PROP_ID=$(printf "%s" "$PROP_LINE" | awk -F':' '{print $2}' | xargs)
          echo "proposal_id=$PROP_ID" >> "$GITHUB_OUTPUT"

      - name: Resolve API base
        id: apibase
        run: |
          # Prefer secret/base override; else use default public site
          if [ -n "${{ secrets.CONSENSUS_API_BASE }}" ]; then
            echo "base=${{ secrets.CONSENSUS_API_BASE }}" >> "$GITHUB_OUTPUT"
          else
            echo "base=https://zeropoint-protocol.pages.dev" >> "$GITHUB_OUTPUT"
          fi

      - name: Fetch consensus JSON
        id: fetch
        run: |
          set -e
          BASE="${{ steps.apibase.outputs.base }}"
          PID="${{ steps.extract.outputs.proposal_id }}"
          URL="$BASE/api/proposals/$PID/consensus"
          echo "Querying: $URL"
          RES=$(curl -fsS "$URL")
          echo "$RES" > consensus.json
          cat consensus.json

      - name: Ensure synthiant + ceo == pass
        run: |
          set -e
          jq -e '.consensus.synthiant=="pass" and .consensus.ceo=="pass"' consensus.json >/dev/null \
            || (echo "Dual Consensus gate failed â€” require synthiant=pass and ceo=pass" && exit 1)
