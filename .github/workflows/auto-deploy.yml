name: Auto Deploy to Cloudflare Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '20'

jobs:
  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Build
        run: |
          npm ci
          npm run build:pages
      - name: Generate Evidence (compat)
        run: node scripts/generate-evidence.mjs

      - name: Validate Evidence Files
        run: |
          SHORT=$(git rev-parse --short=7 HEAD)
          test -f public/status/version.json
          test -f public/evidence/verify/$SHORT/index.json

      - name: Build leaderboard
        run: node scripts/build-leaderboard.mjs

      - name: Fail if placeholders
        run: if grep -R "__BUILD_" -n public evidence; then echo "Placeholders detected"; exit 1; fi

      - name: Fail if perpetual placeholders
        run: |
          if grep -R "Loading\\.\\.\\." -n app public | grep -v README; then \
            echo "Placeholder text found â€” replace with SSR or explicit error."; exit 1; \
          fi

      - name: Check Cloudflare secrets readiness
        id: cf
        run: |
          if [ -n "${{ secrets.CLOUDFLARE_API_TOKEN }}" ] && [ -n "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            echo "ready=false" >> $GITHUB_OUTPUT
            echo "Skipping Cloudflare deploy: secrets missing" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Deploy to Cloudflare Pages
        if: steps.cf.outputs.ready == 'true'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: zeropoint-protocol
          directory: public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Deployment notification
        run: |
          echo "## Auto-Deployment Status ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Completed (deploy step conditional on secrets)" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Zeroth Principle:** Good intent and good heart, or the system doesn't function." >> $GITHUB_STEP_SUMMARY
