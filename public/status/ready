<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ready Status - Zeropoint Protocol</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            min-height: 100vh;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 30px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .header h1 {
            margin: 0;
            font-size: 2.5em;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }
        .header p {
            margin: 10px 0 0 0;
            font-size: 1.2em;
            opacity: 0.9;
        }
        .status-overview {
            background: rgba(255, 255, 255, 0.15);
            border-radius: 10px;
            padding: 25px;
            text-align: center;
            margin-bottom: 30px;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .overall-status {
            font-size: 2em;
            font-weight: bold;
            margin: 15px 0;
        }
        .status-ready {
            color: #4ade80;
        }
        .status-not-ready {
            color: #f87171;
        }
        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .service-card {
            background: rgba(255, 255, 255, 0.15);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .service-card h3 {
            margin: 0 0 15px 0;
            color: #ffd700;
        }
        .service-status {
            font-size: 1.3em;
            font-weight: bold;
            margin: 10px 0;
        }
        .status-ready {
            color: #4ade80;
        }
        .status-not-ready {
            color: #f87171;
        }
        .status-degraded {
            color: #fbbf24;
        }
        .info-section {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .info-section h3 {
            margin: 0 0 15px 0;
            color: #ffd700;
        }
        .back-link {
            text-align: center;
            margin-top: 30px;
        }
        .back-link a {
            color: #ffd700;
            text-decoration: none;
            font-size: 1.1em;
            padding: 10px 20px;
            border: 2px solid #ffd700;
            border-radius: 25px;
            transition: all 0.3s ease;
        }
        .back-link a:hover {
            background: #ffd700;
            color: #333;
        }
        .loading {
            text-align: center;
            font-size: 1.2em;
            opacity: 0.7;
        }
        .error {
            background: rgba(239, 68, 68, 0.2);
            border: 1px solid rgba(239, 68, 68, 0.5);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>✅ Ready Status</h1>
            <p>Zeropoint Protocol System Readiness Monitor</p>
        </div>
        
        <div id="loading" class="loading">Loading readiness status...</div>
        
        <div id="content" style="display: none;">
            <div class="status-overview">
                <h2>Overall System Status</h2>
                <div id="overallStatus" class="overall-status status-ready"></div>
                <p id="statusMessage"></p>
            </div>
            
            <div class="services-grid" id="servicesGrid">
                <!-- Service cards will be populated here -->
            </div>
            
            <div class="info-section">
                <h3>System Information</h3>
                <p><strong>Phase:</strong> <span id="phase"></span></p>
                <p><strong>Timestamp:</strong> <span id="timestamp"></span></p>
            </div>
        </div>
        
        <div id="error" class="error" style="display: none;">
            <h3>⚠️ Error Loading Readiness Status</h3>
            <p id="errorMessage"></p>
        </div>
        
        <div class="back-link">
            <a href="/">← Back to Homepage</a>
        </div>
    </div>

    <script>
        async function loadReadyStatus() {
            try {
                const response = await fetch('/api/readyz');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                
                // Hide loading, show content
                document.getElementById('loading').style.display = 'none';
                document.getElementById('content').style.display = 'block';
                
                // Update overall status
                const overallStatus = document.getElementById('overallStatus');
                overallStatus.textContent = data.ready ? 'READY' : 'NOT READY';
                overallStatus.className = `overall-status ${data.ready ? 'status-ready' : 'status-not-ready'}`;
                
                // Update status message
                document.getElementById('statusMessage').textContent = data.status || '';
                
                // Update system info
                document.getElementById('phase').textContent = data.phase || 'N/A';
                document.getElementById('timestamp').textContent = data.timestamp ? new Date(data.timestamp).toLocaleString() : 'N/A';
                
                // Update services grid
                const servicesGrid = document.getElementById('servicesGrid');
                servicesGrid.innerHTML = '';
                
                if (data.services) {
                    Object.entries(data.services).forEach(([serviceName, serviceStatus]) => {
                        const serviceCard = document.createElement('div');
                        serviceCard.className = 'service-card';
                        
                        const statusClass = serviceStatus === 'ready' ? 'status-ready' : 
                                          serviceStatus === 'not_ready' ? 'status-not-ready' : 'status-degraded';
                        
                        serviceCard.innerHTML = `
                            <h3>${serviceName.charAt(0).toUpperCase() + serviceName.slice(1)}</h3>
                            <div class="service-status ${statusClass}">${serviceStatus}</div>
                        `;
                        
                        servicesGrid.appendChild(serviceCard);
                    });
                }
                
            } catch (error) {
                console.error('Error loading readiness status:', error);
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'block';
                document.getElementById('errorMessage').textContent = error.message;
            }
        }
        
        // Load ready status when page loads
        loadReadyStatus();
        
        // Refresh every 30 seconds
        setInterval(loadReadyStatus, 30000);
    </script>
</body>
</html>
