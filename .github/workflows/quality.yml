name: quality
on: [pull_request]
permissions: { contents: read, pull-requests: write }
concurrency:
  group: pr-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci

      # Type-check (Astro or Nuxt; no-fail fallback)
      - name: Type check
        run: |
          npx -y astro@latest --version >/dev/null 2>&1 && npx astro check || \
          npx -y nuxt@latest --version  >/dev/null 2>&1 && npx nuxt typecheck || \
          echo "no typecheck runner found"

      # Build (prefer package script; safe fallbacks)
      - name: Build
        run: |
          if npm run -s build; then exit 0; fi
          npx -y astro@latest build || npx -y nuxt@latest build

      # Optional boolean-leak guard if script exists
      - name: Boolean leak guard
        if: ${{ hashFiles('scripts/guard-no-bare-booleans.mjs') != '' }}
        run: node scripts/guard-no-bare-booleans.mjs

      # Notify on failure (comment PR)
      - name: Notify on failure
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `‚ùå quality failed for ${context.payload.pull_request.html_url}`
            });
