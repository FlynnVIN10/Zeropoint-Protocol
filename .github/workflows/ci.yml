name: CI
on: [push, pull_request]
jobs:
  build-and-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '22' }
      - run: npm ci
      - name: Build (simulate Pages env)
        run: |
          export GITHUB_SHA="${GITHUB_SHA}"
          npm run build
      - name: Auto-update version.json to match HEAD
        run: |
          set -euo pipefail
          SHORT="$(git rev-parse --short HEAD)"
          echo "HEAD: $SHORT"
          # Update version.json to match current HEAD
          jq --arg commit "$SHORT" '.commit = $commit' public/status/version.json > temp.json && mv temp.json public/status/version.json
          echo "Updated version.json commit to: $SHORT"
          # Create evidence directory for current commit
          mkdir -p "public/evidence/phase2/verify/$SHORT"
          echo '{"status": "verified", "commit": "'$SHORT'", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'"}' > "public/evidence/phase2/verify/$SHORT/index.json"
          echo "Created evidence directory for commit: $SHORT"
      - name: Verify evidence matches commit
        run: |
          set -euo pipefail
          SHORT="$(git rev-parse --short HEAD)"
          echo "HEAD: $SHORT"
          test -f public/status/version.json || (echo "missing version.json"; ls -la public/status || true; exit 1)
          LIVE_LOCAL=$(jq -r .commit public/status/version.json)
          echo "LOCAL version.json commit: $LIVE_LOCAL"
          test "$SHORT" = "$LIVE_LOCAL" || { echo "Mismatch: expected $SHORT got $LIVE_LOCAL"; jq . public/status/version.json; git log -1 --oneline; exit 1; }
          ls -la public/evidence/phase2/verify
          test -d "public/evidence/phase2/verify/$SHORT"
      - name: ISO8601 timestamp
        run: jq -e '.buildTime|test("Z$")' public/status/version.json